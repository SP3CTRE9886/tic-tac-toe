#include <iostream>
#include <cstdlib>
using namespace std;
//*****************************************************************************
char mark[9];
int playerINPUT1();
int playerINPUT2();
int startGAME();
int updateGRID();
int result();
int winner(int player);
int clearterm(){
    system("clear");
}
int PreValueAssigner(){
    mark[0] = '1';
    mark[1] = '2';
    mark[2] = '3';
    mark[3] = '4';
    mark[4] = '5';
    mark[5] = '6';
    mark[6] = '7';
    mark[7] = '8';
    mark[8] = '9';
}
int i;
int getPOSE;
//*****************************************************************************
int main(){
    clearterm();
    system("resize -s 24 110 ");
    clearterm();
    PreValueAssigner();
    cout<<"████████╗██╗ ██████╗    ████████╗ █████╗  ██████╗    ████████╗ ██████╗ ███████╗"<<endl
        <<"╚══██╔══╝██║██╔════╝    ╚══██╔══╝██╔══██╗██╔════╝    ╚══██╔══╝██╔═══██╗██╔════╝"<<endl
        <<"   ██║   ██║██║            ██║   ███████║██║            ██║   ██║   ██║█████╗  "<<endl
        <<"   ██║   ██║██║            ██║   ██╔══██║██║            ██║   ██║   ██║██╔══╝  "<<endl
        <<"   ██║   ██║╚██████╗       ██║   ██║  ██║╚██████╗       ██║   ╚██████╔╝███████╗"<<endl
        <<"   ╚═╝   ╚═╝ ╚═════╝       ╚═╝   ╚═╝  ╚═╝ ╚═════╝       ╚═╝    ╚═════╝ ╚══════╝"<<endl;

cout<<"\t\t ╔═════╗══════╗═════╗"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ║  X  ║  O   ║  X  ║"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ║═════║══════║═════║"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ║  O  ║  X   ║  O  ║"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ║═════║══════║═════║"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ║  X  ║  O   ║  X  ║"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ╚═════╚══════╚═════╝"<<endl;

    cout<<"press enter to start GAME !";
    cin.get();
    clearterm();
    updateGRID();
    startGAME();

}
//******************************************************************************

int startGAME(){
    for (i=0; i<10 ; i++){
        if(i%2 == 0){
            playerINPUT1();
        }
        else{
            playerINPUT2();
        }
    }
}
//******************************************************************************

int playerINPUT1(){
    cout<<"\t\t player1 [X] 's turn :\n";

    cout<<"\t\t\t input to the possition (1-9) : ";

    cin>>getPOSE;

    if (mark[getPOSE-1] != 'X' && mark[getPOSE-1] != 'O')
        mark[getPOSE - 1] = 'X';
    else{
        cout<<"this possition is already marked try another ";
        playerINPUT1();
    }
    clearterm();
    updateGRID();
}

int playerINPUT2(){
    cout<<"\t\t player2 [O] 's turn :\n";

    cout<<"\t\t\t input to the possition (1-9) : ";

    cin>>getPOSE;
    if (mark[getPOSE-1] != 'X' && mark[getPOSE-1] != 'O')
        mark[getPOSE - 1] = 'O';
    else{
        cout<<"this possition is already marked try another ";
        playerINPUT2();
    }
    clearterm();
    updateGRID();
}

//******************************************************************************

int updateGRID(){
cout<<"\t\t ╔═════╗══════╗═════╗"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ║  "<<mark[0]<<"  ║  " <<mark[1]<<"   ║  "<<mark[2]<<"  ║"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ║═════║══════║═════║"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ║  "<<mark[3]<<"  ║  " <<mark[4]<<"   ║  "<<mark[5]<<"  ║"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ║═════║══════║═════║"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ║  "<<mark[6]<<"  ║  " <<mark[7]<<"   ║  "<<mark[8]<<"  ║"<<endl
    <<"\t\t ║     ║      ║     ║"<<endl
    <<"\t\t ╚═════╚══════╚═════╝"<<endl;
    result();
    if(mark[0] != '1' && mark[1] != '2')
        if(mark[2] != '3' && mark[3] != '4')
            if(mark[4] != '5' && mark[5] != '6')
                if(mark[6] != '7' && mark[7] != '8')
                    if (mark[8 != '9'])
                        winner(0);

}

//******************************************************************************

int result(){

if (mark[0] == mark[1] && mark [0] == mark[2]){
    if (mark[0] == 'X')
        winner(1);
    if (mark[0] == 'O')
        winner(2);
}

if (mark[0] == mark[3] && mark[0] == mark[6]){
    if (mark[0] == 'X')
        winner(1);
    if (mark[0] == 'O')
        winner(2);
}

if (mark[0] == mark[4] && mark[0] == mark[8]){
    if (mark[0] == 'X')
        winner(1);
    if (mark[0] == 'O')
        winner(2);
}

if (mark[1] == mark[4] && mark[1] == mark[7]){
    if (mark[1] == 'X')
        winner(1);
    if (mark[1] == 'O')
        winner(2);
}

if (mark[2] == mark[5] && mark[2] == mark[8]){
    if (mark[2] == 'X')
        winner(1);
    if (mark[2] == 'O')
        winner(2);
}

if (mark[4] == mark[3] && mark[3] == mark[5]){
    if (mark[3] == 'X')
        winner(1);
    if (mark[3] == 'O')
        winner(2);
}

if (mark[6] == mark[2] && mark[6] == mark[4]){
    if (mark[2] == 'X')
        winner(1);
    if (mark[2] == 'O')
        winner(2);
}

if (mark[6] == mark[7] && mark[6] == mark[8]){
    if (mark[6] == 'X')
        winner(1);
    if (mark[6] == 'O')
        winner(2);
}



}
//******************************************************************************
int winner(int player){
    if (player == 1){
        clearterm();
        cout<<" ██████╗ ██╗      █████╗ ██╗   ██╗███████╗██████╗     ███╗██╗  ██╗███╗    ██╗    ██╗██╗███╗   ██╗███████╗ "<<endl
            <<" ██╔══██╗██║     ██╔══██╗╚██╗ ██╔╝██╔════╝██╔══██╗    ██╔╝╚██╗██╔╝╚██║    ██║    ██║██║████╗  ██║██╔════╝ "<<endl
            <<" ██████╔╝██║     ███████║ ╚████╔╝ █████╗  ██████╔╝    ██║  ╚███╔╝  ██║    ██║ █╗ ██║██║██╔██╗ ██║███████╗ "<<endl
            <<" ██╔═══╝ ██║     ██╔══██║  ╚██╔╝  ██╔══╝  ██╔══██╗    ██║  ██╔██╗  ██║    ██║███╗██║██║██║╚██╗██║╚════██║ "<<endl
            <<" ██║     ███████╗██║  ██║   ██║   ███████╗██║  ██║    ███╗██╔╝ ██╗███║    ╚███╔███╔╝██║██║ ╚████║███████║ "<<endl
            <<" ╚═╝     ╚══════╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝    ╚══╝╚═╝  ╚═╝╚══╝     ╚══╝╚══╝ ╚═╝╚═╝  ╚═══╝╚══════╝ "<<endl;

        exit(0);
    }
    else if(player == 2){
        clearterm();
        cout<<"██████╗ ██╗      █████╗ ██╗   ██╗███████╗██████╗     ███╗ ██████╗ ███╗    ██╗    ██╗██╗███╗   ██╗███████╗"<<endl
            <<"██╔══██╗██║     ██╔══██╗╚██╗ ██╔╝██╔════╝██╔══██╗    ██╔╝██╔═══██╗╚██║    ██║    ██║██║████╗  ██║██╔════╝"<<endl
            <<"██████╔╝██║     ███████║ ╚████╔╝ █████╗  ██████╔╝    ██║ ██║   ██║ ██║    ██║ █╗ ██║██║██╔██╗ ██║███████╗"<<endl
            <<"██╔═══╝ ██║     ██╔══██║  ╚██╔╝  ██╔══╝  ██╔══██╗    ██║ ██║   ██║ ██║    ██║███╗██║██║██║╚██╗██║╚════██║"<<endl
            <<"██║     ███████╗██║  ██║   ██║   ███████╗██║  ██║    ███╗╚██████╔╝███║    ╚███╔███╔╝██║██║ ╚████║███████║"<<endl
            <<"╚═╝     ╚══════╝╚═╝  ╚═╝   ╚═╝   ╚══════╝╚═╝  ╚═╝    ╚══╝ ╚═════╝ ╚══╝     ╚══╝╚══╝ ╚═╝╚═╝  ╚═══╝╚══════╝"<<endl;

        exit(0);
    }
    else{
        clearterm();
        cout<<"██████╗ ██████╗  █████╗ ██╗    ██╗    ███╗   ███╗ █████╗ ████████╗ ██████╗██╗  ██╗"<<endl
            <<"██╔══██╗██╔══██╗██╔══██╗██║    ██║    ████╗ ████║██╔══██╗╚══██╔══╝██╔════╝██║  ██║"<<endl
            <<"██║  ██║██████╔╝███████║██║ █╗ ██║    ██╔████╔██║███████║   ██║   ██║     ███████║"<<endl
            <<"██║  ██║██╔══██╗██╔══██║██║███╗██║    ██║╚██╔╝██║██╔══██║   ██║   ██║     ██╔══██║"<<endl
            <<"██████╔╝██║  ██║██║  ██║╚███╔███╔╝    ██║ ╚═╝ ██║██║  ██║   ██║   ╚██████╗██║  ██║"<<endl
            <<"╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝ ╚══╝╚══╝     ╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝    ╚═════╝╚═╝  ╚═╝"<<endl;
        exit(0);
    }
}
